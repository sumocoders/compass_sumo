// Fallback mixin. Allows you to define a simple fallback for the current class, with the exact scoping.
// A small example:
//   nav ul li {
//     left: 25px;
//
//     @include fallback('ie8') {
//       left: 28px;
//     }
//
// will generate
//   nav ul li { left: 25px; }
//   .ie8 nav ul li { left: 28px; }
@mixin fallback($fallbackClass) {
	.#{$fallbackClass} & {
		@content;
	}
}

$defaultSvgFallbackClass: 'no-svg' !default;
$defaultInlineSvgs: true !default;

@mixin generate-svg-background-image(
    $name,
    $backgroundOptions: null,
    $svgImage: null,
    $pngImage: null,
    $fallbackClass: $defaultSvgFallbackClass,
    $inline: $defaultInlineSvgs,
    $dimensions: true,
    $hover: false
    ) {
  $svgImage: "#{$name}.svg" !default;
  $pngImage: "#{$name}.png" !default;

  @if ($inline) {
    @include background(inline-image($svgImage) #{$backgroundOptions});
    background-size: image-width($pngImage) auto;
  } @else {
    @include background(image-url($svgImage) #{$backgroundOptions});
    background-size: image-width($pngImage) auto;
  }

  @if ($dimensions) {
    width: image-width($pngImage);
    height: image-height($pngImage);
  }

  @include fallback($fallbackClass) {
    @include background(image-url($pngImage) #{$backgroundOptions})
  }
}

// Setup a SVG background with PNG fallback
@mixin svg-with-png-fallback($name, $backgroundOptions: null,
				    $svgImage: null, 
				    $pngImage: null,
				    $fallbackClass: $defaultSvgFallbackClass,
				    $inline: $defaultInlineSvgs,
				    $dimensions: true,
                    $hover: false
			    ) {

  @include generate-svg-background-image(
    $name: $name,
    $backgroundOptions: $backgroundOptions,
    $fallbackClass: $fallbackClass,
    $inline: $inline,
    $dimensions: $dimensions,
    $hover: $hover
  );

  @if ($hover) {
    &:hover {
      @include generate-svg-background-image(
        "#{$name}_hover",
        $backgroundOptions: $backgroundOptions,
        $fallbackClass: $fallbackClass,
        $inline: $inline,
        $dimensions: $dimensions,
        $hover: false
      );
    }
  }
}
